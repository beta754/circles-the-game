name: Infra Up
run-name: ${{ github.actor }} is creating all the things ðŸš€
on:
  - push
  - workflow_dispatch
jobs:
  Terraform:
    runs-on: ubuntu-latest
    environment: primary
    permissions: write-all
    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.TFBE_ACESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TFBE_ACCESS_KEY_SECRET }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - uses: ./.github/actions/tf_init
        id: init
        with:
          region: nyc3
          s3_endpoint: https://nyc3.digitaloceanspaces.com
          s3_bucket: ctg-tfstate
          s3_state_key: "terraform.tfstate"
          cwd: .infra
      - name: plan
        shell: pwsh
        working-directory: .infra
        env:
          TFVARS_FILE: ${{ steps.init.outputs.tfvars_file }}
          GITHUB_TOKEN: ${{ secrets.CICD_TOKEN }}
        run: terraform plan -out=tfplan -var-file="$env:TFVARS_FILE"
      - name: apply
        if: github.ref == 'refs/heads/master'
        shell: pwsh
        working-directory: .infra
        env:
          GITHUB_TOKEN: ${{ secrets.CICD_TOKEN }}
        run: |
          terraform apply tfplan
  ArgoCD:
    runs-on: ubuntu-latest
    needs: Terraform
    environment: primary
    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - uses: actions-hub/kubectl@master
        with:
          args: apply -f .system/argocd/Namespace.yaml
      - uses: actions-hub/kubectl@master
        with:
          args: apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  CertManager:
    runs-on: ubuntu-latest
    needs: Terraform
    environment: primary
    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - uses: actions-hub/kubectl@master
        with:
          args: apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.2/cert-manager.yamlapply
      - uses: actions-hub/kubectl@master
        with:
          args: apply -f .system/cert-manager/ClusterIssuer.yaml
